{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
    },
    "variables": {
        "location": "WestUS",
        "name-suffix": "[uniqueString(resourceGroup().id)]",

        "cosmosDbAccountName": "[concat('cosmos-db-iot-', variables('name-suffix'))]",


        "cosmosDbDatabaseName": "ContosoAuto",
        "cosmosIoTLogicAppName": "[concat('Cosmos-IoT-Logic-', variables('name-suffix'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2018-05-01",
            "name": "labDeployment",
            "properties": {
              "mode": "Incremental",
              "templateLink": {
                "uri": "https://publicstorage42.blob.core.windows.net/arm/labDeploy.json",
                "contentVersion": "1.0.0.0"
              },
              "parameters": { }
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/apis/databases",
            "name": "[concat(variables('cosmosDbAccountName'), '/sql/', variables('cosmosDbDatabaseName'))]",
            "apiVersion": "2016-03-31",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments/', 'labDeployment')]"
            ],
            "properties":{
                "resource":{
                    "id": "[variables('cosmosDbDatabaseName')]"
                }
            }
        },
        {
            "type": "Microsoft.DocumentDb/databaseAccounts/apis/databases/containers",
            "name": "[concat(variables('cosmosDbAccountName'), '/sql/', variables('cosmosDbDatabaseName'), '/', 'metadata')]",
            "apiVersion": "2016-03-31",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/apis/databases', variables('cosmosDbAccountName'), 'sql', variables('cosmosDbDatabaseName'))]"
            ],
            "properties":
            {
                "resource":{
                    "id":  "metadata",
                    "partitionKey": {
                        "paths": [
                        "/partitionKey"
                        ],
                        "kind": "Hash"
                    },
                    "throughput": "15000"
                }
            }
        },
        {
            "type": "Microsoft.DocumentDb/databaseAccounts/apis/databases/containers",
            "name": "[concat(variables('cosmosDbAccountName'), '/sql/', variables('cosmosDbDatabaseName'), '/', 'telemetry')]",
            "apiVersion": "2016-03-31",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/apis/databases', variables('cosmosDbAccountName'), 'sql', variables('cosmosDbDatabaseName'))]"
            ],
            "properties":
            {
                "resource":{
                    "id":  "telemetry",
                    "partitionKey": {
                        "paths": [
                        "/partitionKey"
                        ],
                        "kind": "Hash"
                    },
                    "throughput": "15000",
                    "defaultTtl": -1,
                    "indexingPolicy": {
                        "indexingMode": "consistent",
                        "automatic": true,
                        "includedPaths": [
                            {
                            "path": "/vin/?"
                            },
                            {
                            "path": "/state/?"
                            },
                            {
                            "path": "/partitionKey/?"
                            }
                        ],
                        "excludedPaths": [
                            {
                            "path": "/*"
                            },
                            {
                            "path": "/\"_etag\"/?"
                            }
                        ]
                    }
                }
            }
        },
        {
            "type": "Microsoft.DocumentDb/databaseAccounts/apis/databases/containers",
            "name": "[concat(variables('cosmosDbAccountName'), '/sql/', variables('cosmosDbDatabaseName'), '/', 'maintenance')]",
            "apiVersion": "2016-03-31",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/apis/databases', variables('cosmosDbAccountName'), 'sql', variables('cosmosDbDatabaseName'))]"
            ],
            "properties":
            {
                "resource":{
                    "id":  "maintenance",
                    "partitionKey": {
                        "paths": [
                        "/vin"
                        ],
                        "kind": "Hash"
                    },
                    "throughput": "400"
                }
            }
        },




        









        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "office365",
            "location": "[variables('location')]",
            "properties": {
                "displayName": "cpietschmann@solliance.net",
                "api": {
                    "id": "[concat(subscription().id,'/providers/Microsoft.Web/locations/', variables('location'), '/managedApis/office365')]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[variables('cosmosIoTLogicAppName')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', 'office365')]"
            ],
            "properties": {
                "state": "Disabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "type": "Object",
                            "defaultValue": {}
                        }
                    },
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "schema": {
                                    "properties": {
                                        "consignmentId": {
                                            "type": "string"
                                        },
                                        "customer": {
                                            "type": "string"
                                        },
                                        "deliveryDueDate": {
                                            "type": "string"
                                        },
                                        "distanceDriven": {
                                            "type": "number"
                                        },
                                        "hasHighValuePackages": {
                                            "type": "boolean"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "lastRefrigerationUnitTemperatureReading": {
                                            "type": "integer"
                                        },
                                        "location": {
                                            "type": "string"
                                        },
                                        "lowestPackageStorageTemperature": {
                                            "type": "integer"
                                        },
                                        "odometerBegin": {
                                            "type": "integer"
                                        },
                                        "odometerEnd": {
                                            "type": "number"
                                        },
                                        "plannedTripDistance": {
                                            "type": "number"
                                        },
                                        "recipientEmail": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "temperatureSetting": {
                                            "type": "integer"
                                        },
                                        "tripEnded": {
                                            "type": "string"
                                        },
                                        "tripStarted": {
                                            "type": "string"
                                        },
                                        "vin": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "actions": {
                        "Send_an_email": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "Body": "Here are the details of the trip and consignment:\n\nCONSIGNMENT INFORMATION:\n\nCustomer: @{triggerBody()?['customer']}\nDelivery Due Date: @{triggerBody()?['deliveryDueDate']}\nLocation: @{triggerBody()?['location']}\nStatus: @{triggerBody()?['status']}\n\nTRIP INFORMATION:\n\nTrip Start Time: @{triggerBody()?['tripStarted']} \nTrip End Time: @{triggerBody()?['tripEnded']} \nVehicle (VIN): @{triggerBody()?['vin']}\nPlanned Trip Distance: @{triggerBody()?['plannedTripDistance']}\nDistance Driven: @{triggerBody()?['distanceDriven']}\nStart Odometer Reading: @{triggerBody()?['odometerBegin']}\nEnd Odometer Reading: @{triggerBody()?['odometerEnd']}\n\nPACKAGE INFORMATION:\n\nHas High Value Packages: @{triggerBody()?['hasHighValuePackages']}\nLowest Package Storage Temp (F): @{triggerBody()?['lowestPackageStorageTemperature']}\nTrip Temp Setting (F): @{triggerBody()?['temperatureSetting']}\nLast Refrigeration Unit Temp Reading (F): @{triggerBody()?['lastRefrigerationUnitTemperatureReading']}\n\nREFERENCE INFORMATION:\n\nTrip ID: @{triggerBody()?['id']}\nConsignment ID: @{triggerBody()?['consignmentId']}\nVehicle VIN: @{triggerBody()?['vin']}\n\nRegards,\nContoso Auto Bot\n",
                                    "Subject": "Contoso Auto trip status update: @{triggerBody()?['status']}",
                                    "To": "@triggerBody()?['recipientEmail']"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['office365']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/Mail"
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "office365": {
                                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', variables('location'), '/managedApis/', 'office365')]",
                                "connectionId": "[resourceId('Microsoft.Web/connections', 'office365')]",
                                "connectionName": "office365"
                            }
                        }
                    }
                }
            }
        }














    ]
}
